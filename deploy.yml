name: Build and Push Image

on:
  push:
    branches:
      - v1.0.0

env:
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  SECRET_MANAGER_NAME: ${{ secrets.SECRET_MANAGER_NAME }}
  CLOUD_SQL_HOST: ${{ secrets.CLOUD_SQL_HOST }}

jobs:
  build-and-publish:
    name: Build and Push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ env.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          version: "latest"
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure docker to use the gcloud cli
        run: gcloud auth configure-docker --quiet

      - name: Move docker setting file 
        run: |
          mv run/* ./

      - id: "secrets"
        uses: "google-github-actions/get-secretmanager-secrets@v0"
        with:
          secrets: |-
            ENV_VARS:${{ env.GCP_PROJECT_ID }}/${{ env.SECRET_MANAGER_NAME }}

      - name: Create env file 
        run: |
          cat <<EOF > .env
          ${{ steps.secrets.outputs.ENV_VARS }}
          EOF

      - name: Build
        run: |
          docker build -t asia.gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} ./

      - name: Push
        run: |
          docker push asia.gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image asia.gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --port 80 \
            --project ${{ env.GCP_PROJECT_ID }} \
            --region asia-northeast1 \
            --platform=managed \
            --allow-unauthenticated \
            --service-account=${{ env.SERVICE_ACCOUNT }} \
            --add-cloudsql-instances=${{ env.CLOUD_SQL_HOST }} \
            --quiet
